name: WF_Desarrollo

on:
  push:
    branches: 
      - desarrollo 
  pull_request:
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
    branches: 
      - desarrollo

jobs:
  job1:
    name: Pruebas
    runs-on: ubuntu-latest
    steps:
    - name: Checkout de repositorio
      uses: actions/checkout@v2
    - name: Configuración de entorno de python
      uses: actions/setup-python@v2
      with:
          python-version: '3.7'
    - name: Instalación de librerías y dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Correr pruebas
      id: correr-pruebas
      run: python -m unittest discover -s tests -v
    - name: Cálculo de cubrimiento
      id: cubrimiento
      run: |
          coverage run -m unittest discover -s tests -v
          coverage report -m
  create-branch:
    if: ${{ contains(github.event.head_commit.message, '[RELEASE]') }}
    name: create-release-branch
    needs: job1
    runs-on: ubuntu-latest
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v2
      - name: generate FOO unique variable based on timestamp
        run: echo FOO=release_$(date +%s) >> $GITHUB_ENV
      - name: create branch
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: "${{ env.FOO }}"
  automerge:
    if: ${{ contains(github.event.head_commit.message, '[RELEASE]') }}
    name: merge-branch
    needs: create-branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v2

      - name: Merge develop -> main
        uses: devmasx/merge-branch@master
        with:
          type: now
          target_branch: main
          github_token: ${{ github.token }}
  